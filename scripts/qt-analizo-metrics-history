#!/usr/bin/ruby
# metrics-history
# Generates the metrics of the whole history of an application.
# Antônio Terceiro (terceiro@dcc.ufba.br)
# Luiz Romário Santana Rios (luizromario@gmail.com)
# 
# Usage: metrics-history repository-url
#        metrics-history -f repository-folder
#

dir = "/#{`which #{$PROGRAM_NAME}`.split("/")[0..-2].join("/")}"
Dir.chdir("#{dir}/metrics-history") do
  require 'AnalizoRunner'
  require 'Options'
end

require 'Qt4'

class QtAnalizoMetricsHistory < Qt::Widget
  slots 'analysis()'
  slots 'select_dir()'
  def initialize(parent = nil)
    super
    @folder_line_edit = Qt::LineEdit.new
    @button_calculate = Qt::PushButton.new("Calculate")
    @metricsfor_text = Qt::Label.new("Insert a git directory to extract the metrics from.")
    @button_dir = Qt::PushButton.new("Select directory")
    @metrics_table_view = Qt::TableView.new
    @metrics_table_model = Qt::StandardItemModel.new(@metrics_table_view)
    @upper_layout = Qt::HBoxLayout.new
    @main_layout = Qt::VBoxLayout.new
    
    @dir = Dir.pwd
    metrics = ["commit_id", "nearest_changed_ancestral_id", "author", "e-mail", "average_cbo", "average_lcom4", "cof", "sum_classes", "sum_nom", "sum_npm", "sum_npv", "total_loc", "changed_files", "date"]
    @metrics_table_model.setHorizontalHeaderLabels(metrics)
    @metrics_table_view.setModel(@metrics_table_model)
    
    connect(@button_calculate, SIGNAL('clicked()'), self, SLOT('analysis()'))
    
    @upper_layout.addWidget(@folder_line_edit)
    @upper_layout.addWidget(@button_calculate)
    @main_layout.addLayout(@upper_layout)
    @main_layout.addWidget(@metricsfor_text)
    @main_layout.addWidget(@metrics_table_view)
    setLayout(@main_layout)
    resize(800, 480)
  end
  def analysis
    @metrics = AnalizoRunner.metrics_history({ :folder => @folder_line_edit.text, :url => :none })
    @metricsfor_text.setText("Metrics for project #{@metrics[1]}:")
    @metrics[0][0..-2].each_with_index do |metric, row|
      metric[0].each_with_index do |m, column|
        i = Qt::StandardItem.new
        i.setText(m)
        @metrics_table_model.setItem(row, column+4, i)
      end
    end
  end
  def select_dir
    
  end
  def save_to_file
    File.open(previous_dir+"/#{time_start_str = Time.now.strftime('%Y%m%d%H%M%S')}-#{proj_name}-metrics.csv", 'w') do |file|
      file.puts "commit_id,nearest_changed_ancestral_id,author,e-mail,average_cbo,average_lcom4,cof,sum_classes,sum_nom,sum_npm,sum_npv,sum_tloc,changed_files,date\n"
      analysis[0].each do |metr|
        file.puts AnalizoRunner.metrics_to_csv_line(metr)
      end
    end
  end
end

app = Qt::Application.new(ARGV)

mainwin = QtAnalizoMetricsHistory.new
mainwin.show

app.exec


