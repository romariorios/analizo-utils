#!/usr/bin/ruby
# metrics-history
# Generates the metrics of the whole history of an application.
# Antônio Terceiro (terceiro@dcc.ufba.br)
# Luiz Romário Santana Rios (luizromario@gmail.com)
# 
# Usage: metrics-history repository-url
#        metrics-history -f repository-folder
#

dir = "/#{`which #{$PROGRAM_NAME}`.split("/")[0..-2].join("/")}"
Dir.chdir("#{dir}/metrics-history") do
  require 'AnalizoRunner'
  require 'Options'
end

require 'Qt4'

class QtAnalizoMetricsHistory < Qt::Widget
  slots 'analysis()'
  slots 'select_dir()'
  slots 'save_to_file()'
  
  def initialize(parent = nil)
    super
    @folder_line_edit = Qt::LineEdit.new
    @button_calculate = Qt::PushButton.new("Extract")
    @metricsfor_text = Qt::Label.new("Insert a git directory to extract the metrics from.")
    @button_dir = Qt::PushButton.new("Directory...")
    @metrics_table_view = Qt::TableView.new
    @metrics_table_model = Qt::StandardItemModel.new(@metrics_table_view)
    @upper_layout = Qt::HBoxLayout.new
    @main_layout = Qt::VBoxLayout.new
    
    @folder_line_edit.setText Dir.pwd
    @fields = [
      # -1: Commit info
      # 0: Metric
      [:id, -1],
      [:previous_wanted, -1],
      [:author, -1],
      [:author_email, -1]
    ]
    AnalizoRunner.metric_list.map{ |metr| [metr, 0] }.each{ |metr| @fields << metr }
    [
      ["total_loc", 0],
      [:changed_files, -1],
      [:date, -1]
    ].each{ |metr| @fields << metr }
    puts "Fields: "
    puts @fields.inspect
    @metrics_table_model.setHorizontalHeaderLabels(@fields.map{ |f| f[0].to_s })
    @metrics_table_view.setModel(@metrics_table_model)
    
    connect(@button_calculate, SIGNAL('clicked()'), self, SLOT('analysis()'))
    connect(@button_dir, SIGNAL('clicked()'), self, SLOT('select_dir()'))
    
    @upper_layout.addWidget(@folder_line_edit)
    @upper_layout.addWidget(@button_dir)
    @upper_layout.addWidget(@button_calculate)
    @main_layout.addLayout(@upper_layout)
    @main_layout.addWidget(@metricsfor_text)
    @main_layout.addWidget(@metrics_table_view)
    setLayout(@main_layout)
    resize(800, 480)
  end
  def analysis
    puts "Entered new thread"
    @folder_line_edit.setEnabled(false); @button_calculate.setEnabled(false); @button_dir.setEnabled(false)
    @metrics = AnalizoRunner.metrics_history({ :folder => @folder_line_edit.text, :url => :none })
    @folder_line_edit.setEnabled(true); @button_calculate.setEnabled(true); @button_dir.setEnabled(true)
    @metricsfor_text.setText("Metrics for project #{@metrics[1]}:")
    @metrics[0][0..-2].each_with_index do |metric, row|
      @fields.each_with_index do |f, i|
        fi = Qt::StandardItem.new
        fi.setText(metric[f[1]][f[0]].to_s)
        fi.setEditable(false)
        fi.setSelectable(false)
        @metrics_table_model.setItem(row, i, fi)
      end
    end
  end
  def select_dir
    @folder_line_edit.setText Qt::FileDialog.getExistingDirectory(self, "Select git repository folder", @folder_line_edit.text)
  end
  def save_to_file
    File.open(@dir+"/#{time_start_str = Time.now.strftime('%Y%m%d%H%M%S')}-#{proj_name}-metrics.csv", 'w') do |file|
      file.puts "commit_id,nearest_changed_ancestral_id,author,e-mail,average_cbo,average_lcom4,cof,sum_classes,sum_nom,sum_npm,sum_npv,sum_tloc,changed_files,date\n"
      @metrics[0][0..-2].each do |metr|
        file.puts AnalizoRunner.metrics_to_csv_line(metr)
      end
    end
  end
end

app = Qt::Application.new(ARGV)

mainwin = QtAnalizoMetricsHistory.new
mainwin.show

app.exec


